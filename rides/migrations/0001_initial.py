# Generated by Django 4.2.23 on 2025-08-18 13:02

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=255, unique=True)),
                ('booking_type', models.CharField(max_length=100)),
                ('pickup_date', models.DateField()),
                ('pickup_time', models.TimeField()),
                ('duration_hours', models.PositiveSmallIntegerField(default=0)),
                ('pickup_address', models.CharField(max_length=255)),
                ('pickup_lat', models.FloatField(blank=True, null=True)),
                ('pickup_lng', models.FloatField(blank=True, null=True)),
                ('dropoff_address', models.CharField(blank=True, default='', max_length=255)),
                ('dropoff_lat', models.FloatField(blank=True, null=True)),
                ('dropoff_lng', models.FloatField(blank=True, null=True)),
                ('distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(default='EUR', max_length=8)),
                ('notes', models.TextField(blank=True, default='')),
                ('status', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('can_add_booking', 'Can add booking'), ('can_view_booking', 'Can view booking'), ('can_update_booking', 'Can update booking'), ('can_delete_booking', 'Can delete booking')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CarClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True)),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('per_km_rate', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('per_hour_rate', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('min_hours', models.PositiveSmallIntegerField(default=1)),
                ('airport_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='carclasses/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'permissions': [('can_add_carclass', 'Can add carclass'), ('can_view_carclass', 'Can view carclass'), ('can_update_carclass', 'Can update carclass'), ('can_delete_carclass', 'Can delete carclass')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='FareRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Default Fare Rule', max_length=64)),
                ('active', models.BooleanField(default=True)),
                ('night_enabled', models.BooleanField(default=True)),
                ('night_start_hour', models.PositiveSmallIntegerField(default=22)),
                ('night_end_hour', models.PositiveSmallIntegerField(default=6)),
                ('night_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.20'), max_digits=5)),
                ('weekend_enabled', models.BooleanField(default=True)),
                ('weekend_multiplier', models.DecimalField(decimal_places=2, default=Decimal('1.10'), max_digits=5)),
                ('weekend_days', models.CharField(default='5,6', max_length=16)),
                ('waiting_free_minutes', models.PositiveSmallIntegerField(default=5)),
                ('waiting_charge_per_minute', models.DecimalField(decimal_places=2, default=Decimal('0.75'), max_digits=7)),
                ('commission_applies_to_waiting', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-active', '-created_at'],
                'permissions': [('can_add_fare_rule', 'Can add fare rule'), ('can_view_fare_rule', 'Can view fare rule'), ('can_update_fare_rule', 'Can update fare rule'), ('can_delete_fare_rule', 'Can delete fare rule')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, unique=True)),
                ('percent_off', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('amount_off', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('active', models.BooleanField(default=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_to', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'permissions': [('can_add_promo_code', 'Can add promocode'), ('can_view_promo_code', 'Can view promocode'), ('can_update_promo_code', 'Can update promocode'), ('can_delete_promo_code', 'Can delete promocode')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('make', models.CharField(max_length=64)),
                ('model', models.CharField(max_length=64)),
                ('color', models.CharField(blank=True, default='', max_length=32)),
                ('year', models.PositiveIntegerField()),
                ('plate_number', models.CharField(max_length=32)),
                ('capacity', models.PositiveSmallIntegerField(default=3)),
                ('luggage_capacity', models.PositiveSmallIntegerField(default=2)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('car_class', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='vehicles', to='rides.carclass')),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicles', to='accounts.driver')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='accounts.partnercompany')),
            ],
            options={
                'permissions': [('can_add_vehicle', 'Can add vehicle'), ('can_view_vehicle', 'Can view vehicle'), ('can_update_vehicle', 'Can update vehicle'), ('can_delete_vehicle', 'Can delete vehicle')],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='TripEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('at', models.DateTimeField(auto_now_add=True)),
                ('kind', models.CharField(max_length=40)),
                ('meta', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='rides.booking')),
            ],
        ),
        migrations.CreateModel(
            name='BookingStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField()),
                ('location_lat', models.FloatField(blank=True, null=True)),
                ('location_lng', models.FloatField(blank=True, null=True)),
                ('label', models.CharField(blank=True, max_length=120)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stops', to='rides.booking')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='car_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bookings', to='rides.carclass'),
        ),
        migrations.AddField(
            model_name='booking',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignment', to='rides.booking')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.driver')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='rides.vehicle')),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('can_add_assignment', 'Can add assignment'), ('can_view_assignment', 'Can view assignment'), ('can_update_assignment', 'Can update assignment'), ('can_delete_assignment', 'Can delete assignment')],
                'default_permissions': (),
            },
        ),
    ]
